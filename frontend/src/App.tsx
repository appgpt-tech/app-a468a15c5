//Source code generated by AppGPT (www.appgpt.tech)
import { Admin, Resource, CustomRoutes } from 'react-admin';
import { customDataProvider } from './dataProvider';
import fakeDataProvider from 'ra-data-fakerest';
import { Dashboard } from './dashboard';
import { authProvider, apInitialize } from './authProvider';
import { i18nProvider } from './i18nProvider';
import LoginPage, { Login } from './Login';
import data from './data';
import { usersList, usersCreate, usersEdit } from './resources/users';
import {
  locationsList,
  locationsCreate,
  locationsEdit,
} from './resources/locations';
import { tripsList, tripsCreate, tripsEdit } from './resources/trips';
import {
  accessoriesList,
  accessoriesCreate,
  accessoriesEdit,
} from './resources/accessories';
import { blogsList, blogsCreate, blogsEdit } from './resources/blogs';
import {
  emergencyContactsList,
  emergencyContactsCreate,
  emergencyContactsEdit,
} from './resources/emergencyContacts';
import { journalList, journalCreate, journalEdit } from './resources/journal';
import usersIcon from '@mui/icons-material/Person';
import locationsIcon from '@mui/icons-material/LocationOn';
import tripsIcon from '@mui/icons-material/Flight';
import accessoriesIcon from '@mui/icons-material/Backpack';
import blogsIcon from '@mui/icons-material/Book';
import emergencyContactsIcon from '@mui/icons-material/LocalHospital';
import journalIcon from '@mui/icons-material/PhotoAlbum';
// SUPERTOKENS
import React from 'react';
import SuperTokens, {
  SuperTokensWrapper,
  getSuperTokensRoutesForReactRouterDom,
} from 'supertokens-auth-react';
import ThirdPartyPasswordless from 'supertokens-auth-react/recipe/thirdpartypasswordless';
import Session from 'supertokens-auth-react/recipe/session';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import * as reactRouterDom from 'react-router-dom';
let sessionFn = Session.init();
SuperTokens.init({
  appInfo: {
    appName: import.meta.env.VITE_SUPERTOKENS_APPNAME,
    apiDomain: import.meta.env.VITE_BACKEND_DOMAIN,
    websiteDomain: import.meta.env.VITE_SUPERTOKENS_WEBSITEDOMAIN,
    apiBasePath: import.meta.env.VITE_BACKEND_APIPATH + '/auth',
    websiteBasePath: import.meta.env.VITE_SUPERTOKENS_WEBSITEBASEPATH,
  },
  recipeList: [
    ThirdPartyPasswordless.init({
      contactMethod: 'EMAIL',
      signInUpFeature: {
        providers: [
          ThirdPartyPasswordless.Github.init(),
          //ThirdPartyPasswordless.Google.init(),
          //ThirdPartyPasswordless.Facebook.init(),
          //ThirdPartyPasswordless.Apple.init(),
        ],
      },
    }),
    sessionFn,
  ],
});
apInitialize(Session);
// END SUPERTOKENS
let dataProvider: any;
if (import.meta.env.VITE_USE_BACKEND_DATA === 'true') {
  dataProvider = customDataProvider(
    import.meta.env.VITE_BACKEND_DOMAIN +
      import.meta.env.VITE_BACKEND_APIPATH +
      '/proxy',
  );
} else {
  dataProvider = fakeDataProvider(data.defaultData);
}

const App = () => (
  <SuperTokensWrapper>
    <BrowserRouter basename="/a468a15c5">
      <Admin
        authProvider={
          import.meta.env.VITE_ENVIRONMENT != 'DEV' ? authProvider : undefined
        }
        requireAuth
        loginPage={LoginPage}
        dataProvider={dataProvider}
        i18nProvider={i18nProvider}
        dashboard={Dashboard}
      >
        <Resource
          name="users"
          options={{ label: 'Users' }}
          list={usersList}
          create={usersCreate}
          edit={usersEdit}
          recordRepresentation="Username"
          icon={usersIcon}
        />
        <Resource
          name="locations"
          options={{ label: 'Locations' }}
          list={locationsList}
          create={locationsCreate}
          edit={locationsEdit}
          recordRepresentation="Latitude"
          icon={locationsIcon}
        />
        <Resource
          name="trips"
          options={{ label: 'Trips' }}
          list={tripsList}
          create={tripsCreate}
          edit={tripsEdit}
          recordRepresentation="ListOfTrips"
          icon={tripsIcon}
        />
        <Resource
          name="accessories"
          options={{ label: 'Accessories' }}
          list={accessoriesList}
          create={accessoriesCreate}
          edit={accessoriesEdit}
          recordRepresentation="NecessaryItems"
          icon={accessoriesIcon}
        />
        <Resource
          name="blogs"
          options={{ label: 'Blogs' }}
          list={blogsList}
          create={blogsCreate}
          edit={blogsEdit}
          recordRepresentation="Title"
          icon={blogsIcon}
        />
        <Resource
          name="emergencyContacts"
          options={{ label: 'Emergency Contacts' }}
          list={emergencyContactsList}
          create={emergencyContactsCreate}
          edit={emergencyContactsEdit}
          recordRepresentation="TrustedContactList"
          icon={emergencyContactsIcon}
        />
        <Resource
          name="journal"
          options={{ label: 'Journal' }}
          list={journalList}
          create={journalCreate}
          edit={journalEdit}
          recordRepresentation="Blogs"
          icon={journalIcon}
        />
        <CustomRoutes noLayout>
          {/*This renders the login UI on the /auth route*/}
          {getSuperTokensRoutesForReactRouterDom(reactRouterDom)}
          {/*Your app routes*/}
        </CustomRoutes>
      </Admin>
    </BrowserRouter>
  </SuperTokensWrapper>
);

export default App;
